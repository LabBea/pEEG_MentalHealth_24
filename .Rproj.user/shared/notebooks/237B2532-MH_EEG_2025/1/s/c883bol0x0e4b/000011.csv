"0","# Part 1: Read and Clean the Spectral Power Data"
"0","################################################################################"
"0","Spectral_data <- read_delim(here(""Data"",""Int_Absolute_Power.txt""))"
"2","[1mRows: [22m[34m1278[39m [1mColumns: [22m[34m18[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m ""\t""
[31mchr[39m  (3): File, Freq_int_name, Freq_interval
[32mdbl[39m (15): Condition, AF3, AF4, F3, F4, F7, F8, FC5, FC6, O1, O2, P7, P8, T7, T8"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","Spectral_data$Visit <- Spectral_data$File"
"0","Spectral_data$Visit <- substr(Spectral_data$File, start = 6, stop = 8)"
"0","Spectral_data$File <- substr(Spectral_data$File, start = 1, stop = 4)"
"0","Spectral_data$Visit <- sub(""[\\s_].*"", """",Spectral_data$Visit)"
"0","Spectral_data <- Spectral_data[,c(1,19,2:18)]"
"0","Spectral_data <- Spectral_data %>% rename(ParticipantID = File)"
"0",""
"0",""
"0","# Change ""O""s to 0s and change V to T in Visit #apply tupper"
"0","Spectral_data <- Spectral_data %>% mutate(Visit = case_when(Visit == ""V1"" ~ ""T1"", "
"0","                                                            Visit == ""V2"" ~ ""T2"","
"0","                                                            TRUE ~ Visit)) %>%"
"0","                                  mutate(ParticipantID = str_replace(ParticipantID, ""O"", ""0"")) %>%"
"0","                                  mutate(ParticipantID = toupper(ParticipantID)) %>%"
"0","                                  mutate(Visit = toupper(Visit))"
"0",""
"0",""
"0",""
"0","#Rename wave values"
"0","Spectral_data <- Spectral_data %>%"
"0","  dplyr::mutate(Freq_int_name = dplyr::recode(Freq_int_name, "
"0","                                  ""all"" = ""All"", "
"0","                                  ""delta"" = ""Delta"", "
"0","                                  ""teta"" = ""Theta"","
"0","                                  ""alfa"" = ""Alpha"","
"0","                                  ""beta"" = ""Beta"","
"0","                                  ""gamma"" = ""Gamma"")) %>%"
"0","  dplyr::select(-c(Freq_interval, Condition)) # drop rando columns"
"0",""
"0","#Find total power by wave type and convert all values to relative"
"0","Spectral_data <- Spectral_data %>% "
"0","  mutate(Total_power_row = rowSums(across(c(""AF3"",""AF4"",""F3"",""F4"",""F7"",""F8"","
"0","                                           ""FC5"",""FC6"",""O1"",""O2"",""P7"",""P8"",""T7"",""T8"")), "
"0","                                   na.rm=TRUE)) %>%"
"0","  arrange(ParticipantID, Visit) %>%"
"0","  group_by(ParticipantID, Visit) %>%"
"0","  mutate(Total_power = ifelse(Freq_int_name == ""All"", sum(Total_power_row), NA)) %>%"
"0","  fill(Total_power, .direction = ""down"") %>%"
"0","  ungroup()"
"0",""
"0","# Divide by 2 because the all wave sums to all the other waves"
"0","Spectral_data$Total_power <- Spectral_data$Total_power/2 "
"0",""
"0","Spectral_data[,c(""AF3"",""AF4"",""F3"",""F4"",""F7"",""F8"","
"0","                 ""FC5"",""FC6"",""O1"",""O2"",""P7"",""P8"",""T7"",""T8"")] <- Spectral_data[,c(""AF3"",""AF4"",""F3"",""F4"",""F7"",""F8"","
"0","                                                                 ""FC5"",""FC6"",""O1"",""O2"",""P7"",""P8"",""T7"",""T8"")]/Spectral_data$Total_power"
"0",""
"0","Spectral_data <- Spectral_data %>% mutate(Total_rel = rowSums(across(c(""AF3"",""AF4"",""F3"",""F4"",""F7"",""F8"","
"0","                                        ""FC5"",""FC6"",""O1"",""O2"",""P7"",""P8"",""T7"",""T8"")), na.rm=TRUE))"
"0",""
"0",""
"0","# Part 2: Read and Clean the Metadata"
"0","################################################################################"
"0","Metadata <- read.csv(here(""Data"",""pEEG_Metadata.csv""))"
"0","Metadata <- Metadata[,-1] #drop the rando first column"
"0",""
"0","# Make a healthcare numeric column"
"0","Metadata$Healthcare_numeric  <- as.numeric(Metadata$Healthcare == ""Private_Insurance"")"
"0",""
"0","#Log scale PHQ9"
"0","Metadata[,""logcatdi""]<-"
"0","  log(Metadata[,""catdi_severity""]+1)"
"0",""
"0","#Scale to between 0 and 1"
"0","Metadata$CATDI_c <- (Metadata$logcatdi - min(Metadata$logcatdi, na.rm = TRUE)) / "
"0","                  (max(Metadata$logcatdi, na.rm = TRUE) - min(Metadata$logcatdi, na.rm = TRUE))"
"0",""
"0","#Log scale PHQ9"
"0","Metadata[,""logPHQ9""]<-"
"0","  log(Metadata[,""PHQ9""]+1)"
"0",""
"0","#Log scale GAD7"
"0","Metadata[,""loggad7""]<-log(Metadata$GAD7+1)"
"0",""
"0","#Scale to between 0 and 1"
"0","Metadata$PHQ9_c <- (Metadata$logPHQ9 - min(Metadata$logPHQ9, na.rm = TRUE)) / "
"0","                  (max(Metadata$logPHQ9, na.rm = TRUE) - min(Metadata$logPHQ9, na.rm = TRUE))"
"0",""
"0","# Add Race.Ethnicity Combo"
"0","Metadata <- Metadata %>% mutate(Race.Ethnicity = case_when(Race == ""Black"" & Ethnicity == ""Not-Hispanic"" ~ ""Black"","
"0","                                                           Race == ""Black"" & Ethnicity == ""Hispanic"" ~ ""Hispanic Black"","
"0","                                                           Race == ""White"" & Ethnicity == ""Not-Hispanic"" ~ ""White"","
"0","                                                           Race == ""White"" & Ethnicity == ""Hispanic"" ~ ""Hispanic"","
"0","                                                           TRUE ~ ""Other""),"
"0","                                Race_Black = case_when(Race==""Black"" ~ 1, .default = 0),"
"0","                                Ethnicity_Hispanic = case_when(Ethnicity == ""Hispanic""~1, .default = 0))"
"0",""
"0","# Center EGA and Age"
"0","Metadata$Age_c <- (Metadata$Age - min(Metadata$Age, na.rm = TRUE)) / "
"0","                  (max(Metadata$Age, na.rm = TRUE) - min(Metadata$Age, na.rm = TRUE))"
"0","Metadata$EGA_c <- (Metadata$EGA - min(Metadata$EGA, na.rm = TRUE)) / "
"0","                  (max(Metadata$EGA, na.rm = TRUE) - min(Metadata$EGA, na.rm = TRUE))"
"0","Metadata$T1_EGA_c <- (Metadata$T1_EGA - min(Metadata$T1_EGA, na.rm = TRUE)) / "
"0","                  (max(Metadata$T1_EGA, na.rm = TRUE) - min(Metadata$T1_EGA, na.rm = TRUE))"
"0",""
"0",""
"0","#Find Antenatal EGA"
"0","Metadata$Antenatal_EGA<- ifelse(Metadata$Visit != ""PP"", Metadata$EGA, NA)"
"0","Metadata$Antenatal_EGA_c <- (Metadata$Antenatal_EGA - min(Metadata$Antenatal_EGA, "
"0","                                                          na.rm = TRUE)) /"
"0","                 (max(Metadata$Antenatal_EGA , na.rm = TRUE) - min(Metadata$Antenatal_EGA,"
"0","                                                                   na.rm = TRUE))"
"0",""
"0","Metadata$Postpartum_Days_c<-(((Metadata$Postpartum_Days - min(Metadata$Postpartum_Days, "
"0","                                                              na.rm = TRUE)) /"
"0","                 (max(Metadata$Postpartum_Days , na.rm = TRUE) - min(Metadata$Postpartum_Days,"
"0","                                                                     na.rm = TRUE)))*6/40)+1"
"0",""
"0","Metadata <- Metadata %>%"
"0","  mutate(SplitEGA_c = coalesce(Antenatal_EGA_c, Postpartum_Days_c))"
"0","Metadata$loggad7_c <- (Metadata$loggad7 - min(Metadata$loggad7, na.rm = TRUE)) /"
"0","                  (max(Metadata$loggad7, na.rm = TRUE) - min(Metadata$loggad7, na.rm = TRUE))"
"0",""
"0",""
"0","# Merge Data together"
"0","################################################################################"
"0","Spec_Meta_data <- merge(Metadata, Spectral_data, by = c(""ParticipantID"", ""Visit""), all = FALSE)"
"0",""
"0","#Drop SV number label for better grouping"
"0","Spec_Meta_data$Visit <- substr(Spec_Meta_data$Visit, start = 1, stop = 2)"
"0",""
"0","# Drop duplicate rows"
"0","Spec_Meta_data <- unique(Spec_Meta_data)"
